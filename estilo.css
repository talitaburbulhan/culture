/** Existem alguns erros de sintaxe propositais no arquivo css. Encontre os erros que causaram os comportamentos a seguir, e corrija o css para obter o resultado esperado. O objetivo não é criar classes de css, mas corrigir pequenos defeitos na sintaxe das classes já existentes no css. Vejam as imagens na pasta "referencias" (os itens referentes a mouse-over não aparecem entre as diferenças)
2a. Os ícones de redes sociais deveriam ter um destaque ao passar o mouse sobre eles, ficando um pouco mais escuros
2b. A fonte da linha-fina ("From ancient times...") deveria ter um peso um pouco maior
2c. O subtítulo "Origins" deveria ter fonte maior e com mais peso
2d. O bloco de imagem deveria ter a largura da coluna de texto, e a legenda da imagem, um tamanho menor
2e. No cabeçalho, o logo "Culture" deveria mudar levemente de cor ao passar o mouse sobre o item **/

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700&display=swap');
:root {                            /** no root são definidas as variáveis que eu vou reutilizar nas classes, para não ter que redigitar a toda hora **/
    --theme-color: #472479;
    --text-color: #000;
    --font-weight-lead: 500;
    --main-column-max: 1280px;
    --article-column-max: 720px;
}

html,
body {
    font-family: 'Montserrat', Helvetica, Arial, sans-serif;
    font-size: 10px;
    font-weight: 300;
    line-height: 1.8;
    width: 100%;
    height: 100%;
    margin: 0;
}

* {
    box-sizing: border-box;
}

p {
    font-size: 1.6rem;
    padding: 0 6rem;
    display: block;
    width: 100%;
}

a {
    text-decoration: none;
    color: var(--theme-color);
}

.top {
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    justify-content: center;
    position: fixed;
    background-color: #fff;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    font-size: 1.7rem;
    z-index: 10;
}

.top-nav {
    width: 100%;
    max-width: var(--main-column-max);
    display: flex;
    flex-direction: row;
    justify-self: flex-end;
    justify-content: flex-start;
}

.top-brand {
    background-color: #472479;
    font-size: 3rem;
    line-height: 3rem;
    text-transform: uppercase;
    text-decoration: none;
    font-weight: 500;
    color: #fff;
    padding: 2rem 3.2rem;
}

.top-brand :hover {
    background-color: #5d3b8d;
}

.top-links {
    margin-left: auto;
    align-self: center;
    display: flex;
    flex-direction: row;
    padding: 0 2rem;
}

.top-links div {
    padding: 10px;
    font-weight: 500;
}

.main {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    margin: 0;
}

.article {
    margin: 12rem 0 10rem 0;
}

.article-label,
.article-title,
.article-author,
.article-social-icons {
    max-width: var(--main-column-max);
    font-weight: 300;
    line-height: 1.4;
    text-align: center;
    margin: 0 auto 4rem auto;
    padding: 0 2rem;
}

.article-title {
    font-size: 3.6rem;
}

.article-label {
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 0.04rem;
}

.article-social-icons {  /** aqui estão definidas opções de estilo para o container que contém os ícones das mídias sociais**/
    display: flex;
    justify-content: center;
}

.article-social-icons a {  /** O estilo definido aqui se refere  aos itens "a" que estão dentro de um elemento que tem a classe article-social-icons**/
    font-size: 2rem;       /** essa classe define o estilo no estado natural do elemento, sem passsar o mouse em cima, ou seja, como ele será visualizado sem nenhum alteração **/  
    width: 5rem;
    height: 5rem;
    text-decoration: none;
    color: rgba(190, 190, 190, 1);
    border: 1px solid rgba(220, 220, 220, 1);
    display: inline-flex;
    justify-content: center;
    align-items: center;
    margin: 0.5rem;
}

/**.article-social-icons a.hover {   Aqui temos o elemento "a" com uma classe "hover"  e isso está ERRADO. Porque o "hover" não é uma classe, ele é um estado **/
.article-social-icons a:hover {      /** Para definir estado no CSS usa-se " : ". É a marcação para pseusoclasses **/   
    font-size: 2rem;
    text-decoration: none;
    color: rgba(150, 150, 150, 1);
    background-color: rgba(240, 240, 240, 0.5);
    border: 1px solid rgba(150, 150, 150, 1);
}

img.img-opening {
    display: block;
    width: 100%;
    height: auto;
    margin: 0 auto -16rem auto;
    z-index: 0;
}

.img-block {
    display: block;
    width: 100%;
    max-width: var(--article-column-max);
    height: auto;
    margin: 3.2rem auto;
    padding: 0 6rem;
}

/** .img-block #small img {  VERSÃO ERRADA. COMO LER: A imagem (img) está dentro do bloco com ID #small que está dentro de uma bloco Img-block. IMG-BLOCK = pai | #small = filho | img = neto -> essa estrutura NÃO corresponde com a do HTML **/
.img-block.small img {   /** VERSÃO CORRETA: No html (figure class = "img-block small") o small não é um ID, ele é uma segunda classe que é aplicada ao mesmo bloco de conteúdo **/
    display: block;      /** Quando queremos nos referir a duas classes para um mesmo bloco, não se usa espaço e se coloca um ponto entre as classes **/
    width: 100%;
    height: auto;
    margin: 0;
}

.img-block.small .img-caption {  /** Vamos transformar o small de ID para classe, antes estava assim: img-block #small .img-caption  **/
    display: block;
    width: 100%;
    height: auto;
    margin: 1rem 0 0 0;
    font-size: 1.4rem;
    text-align: center;
}

.article-body {
    max-width: var(--main-column-max);
    margin: 4rem auto;
    display: flex;
    flex-direction: column;
    font-size: 1.8rem;
    z-index: 1;
}

.article-body p {
    max-width: var(--article-column-max);
    margin: 3.2rem auto 1rem auto;
    font-weight: 300;
    font-size: 1.6rem;
    letter-spacing: 0.05rem;
    padding: 0 6rem;
}

.article-body p.lead {  /** Aqui encontramos um 'p' com a classe 'lead' , esse 'p' está dentro de um elemento '.article-body' **/
    font-size: 2.2rem;
  /**  font-weight: var(-font-weight-lead);    Essa é a versão errada, não está correto porque são 2 -- na frente do font, tem que estar escrita da mesma forma como foi declarada lá cima, no 'root' **/
    font-weight: var(--font-weight-lead);
    color: var(--font-color);
    background-color: #fff;
    padding: 6rem 6rem 1.6rem 6rem;
}

.article-body p.author {
    text-align: left;
    font-weight: 300;
    padding: 0 6rem;
    margin: 0 auto 3.2rem auto;
}

/**.subheading {  trecho errado: o problema aqui tem a ver com a hierarquia do CSS, ou seja, como o CSS lida com  regras de estilo conflitantes. Se um etilo for definido duas vezes, como o CSS irá lidar com isso?**/
.article-body p.subheading { /** Trecho correto:  tornamos ele mais específico**/
    font-weight: 500;  /** O primeiro fator de hierarquia é a ordem, o estilo que foi escrito primeiro é subrescrito pelo estilo escrito depois **/
    font-size: 2rem;  /** se no estilo que foi escrtio primeiro houver alguma propriedade que não há no estilo que foi escrito depois, o resultado será os estilo escrito depois + a propriedade do primeiro que não havia no segundo. O CSS sobrescresve propriedade repetidas **/
}                     /** Outra regra tem a ver com o quão específica é a descrição de uma classe. Um estilo mais específico terá prioridade sobre outro menos específico  **/   
                      /** esse estilo não está sendo aplicado,  pq mais pra cima foi definido um mais específico, o '.article-body p'. Ali dissemos que o 'p' tem peso de fonte 300, por isso não está considerando o peso 500 do presente estilo  **/    
                    
.side-info {
    margin: 3.2rem 0 -3.2rem auto;
    float: right;
    width: 100%;
    max-width: 280px;
    height: 0;
    overflow: visible;
    background: #fff;
}

.side-info .item {
    margin: 1.6rem 0;
    font-size: 1.4rem;
    font-weight: 500;
}

.side-info .item a {
    color: var(--theme-color);
}

.bottom {
    padding: 3.2rem 0;
    background: var(--theme-color);
    color: #fff;
}

.bottom p {
    max-width: var(--main-column-max);
    margin: 0 auto;
    padding: 0 1rem;
}
